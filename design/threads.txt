
                          Threads in Equalizer


 Application (app) Thread

  The app thread is the main execution thread of an Equalizer
  application, typically the one started from main. It drives the
  application's rendering. The app thread of the server handles blocking
  requests, i.e. all requests which require further network
  communication. The app thread of a render node currently nothing.


 Receiver (recv) Thread

  Each Equalizer node has a recv thread, created during eq::init. It
  listens on all connections and reads the data into packets. The
  packets are dispatched to the command handler functions. The command
  handler functions in the receiver thread should never block.


 Node Thread

  The (render) node thread does execute all node functions (init,
  update, exit) as sent by the server. The commands are dispatched from
  the receiver thread to the node thread using a fifo. Therefore, the
  node thread may block its execution.


 Pipe Thread(s)

  All commands for a pipe and its siblings are executed in a separate
  thread for optimal performance. The commands are dispatched from
  the receiver thread to the node thread using a fifo. Therefore, the
  node thread may block its execution.
