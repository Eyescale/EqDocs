#define S_DOCUMENTATION
#define S_DOCUMENTATION_DEVELOPER
#define PAGE Documentation
#define SUBPAGE Developer
#define TITLE Depth Buffer Pixel Transfer Optimization

#include "header.shtml"

<p>
Author: <a href="mailto:eilemann@gmail.com">eilemann@gmail.com</a><br/>
State: Not usable (see Implementation)
</p>

<h2>Overview</h2>
<p>
  Depth buffer writes on nVidia (ATI unverified) cards can be relatively slow,
  for example ~20 FPS at 1280x1024 on a Quadro fx3550. The
  <a href="http://www.opengl.org/registry/specs/EXT/packed_depth_stencil.txt">GL_EXT_packed_depth_stencil</a>
  extension can be used to bring depth buffer pixel transfer performance in line
  with color buffer performance (~200 FPS). Note that the
  GL_NV_packed_depth_stencil is virtually the same extension.
</p>

<h2>Preconditions</h2>
<p>
  The following conditions have to be true:
  <ol>
    <li>One of the extensions has to be available</li>
    <li>The OpenGL drawable has a stencil buffer, otherwise a
      GL_INVALID_OPERATION error is generated</li>
    <li>Condition 1. and 2. have to apply to the source and <em>all</em>
      destination channels</li>
    <li>The pixel transfer using the extension is faster than an ordinary
      GL_DEPTH_COMPONENT transfers</li>
  </ol>
</p>

<h2>Implementation</h2>
<p>
  The extension is not useful for Equalizer. Depth writes are used for a z-based
  reassembly in DB (sort-last) compound. However, using the GL_DEPTH_STENCIL_EXT
  bypasses "the OpenGL fragment pipeline entirely, unlike the treatment of
  GL_DEPTH_COMPONENT data.  The stencil and depth masks are applied, as are the
  pixel ownership and scissor tests, but all other operations are skipped."
  (quote from the extension specification). This means that no stencil test is
  performed, which is needed for the z-based assembly
  (cf. <a
  href="http://www.equalizergraphics.com/cgi-bin/viewvc.cgi/trunk/src/lib/client/image.cpp?revision=1024&view=markup">eq::Image::_startAssembleDB()</a>).
</p>

<h2>Open Issues</h2>
<p>
  Try using a textured quad and a fragment shader for z-based assembly.
</p>

#include "footer.shtml"
<!-- $Id$ -->
