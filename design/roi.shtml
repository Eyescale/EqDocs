#define S_DOCUMENTATION
#define S_DOCUMENTATION_DEVELOPER
#define PAGE Documentation
#define SUBPAGE Developer
#define TITLE Region of Interest

#include "header.shtml"

<p>
  Author: <a href="mailto:eilemann@gmail.com">eilemann@gmail.com</a><br/>
  State: Design Brainstorming
</p>

<h2>Overview</h2>
<p>
  The region of interest (ROI) is the screen-space area covered by the channel
  during rendering. The application can declare this area, which is then used by
  Equalizer to optimize parts of the rendering pipeline.
</p><p> 
  In the current implementation Equalizer optimizes compositing operations
  by limiting the framebuffer area to be read, transferred and written.
</p>

<h2>Implementation</h2>
<p>
  The <code>Channel::draw</code> operation declares the region of interest. The
  ROI is a fractional viewport with respect to the channel viewport. The initial
  ROI is the full, i.e., <code>[ 0 0 1 1 ]</code>. The ROI is retained over all
  operations and will not be changed by Equalizer. It is the responsibility of
  the application to keep the ROI up to date, or to reset it to the full channel
  area.
</p><p>
  The ROI is relative to the context in which it was set. Subsequent operations
  on the same channel might use a different pixel viewport. Internally we will
  therefore save the pixel viewport for which the ROI was set, and adapt the ROI
  returned by <code>Channel::getROI</code> accordingly.
</p>

<h2>API</h2>
<!-- /* --><pre>
  void Channel::setROI( const eq::Viewport& roi );
</pre><!-- */ -->

<h2>Open Issues</h2>
<p>
  Can be used for automatic load balancing, but load balancing is not yet
  implemented.
</p>

#include "footer.shtml"
<!-- $Id$ -->
