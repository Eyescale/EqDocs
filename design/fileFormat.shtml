#define S_DOCUMENTATION
#define S_DOCUMENTATION_DEVELOPER
#define PAGE Documentation
#define SUBPAGE Developers: File Format

#include "header.shtml"

<h2>Configuration File Format</h2>
<p>
Author: <a href="mailto:eilemann@gmail.com">eilemann@gmail.com</a><br/>
</p>

<p>
  The configuration file format for the Equalizer server is described below. The
  directory <code>src/examples/configs</code> does contain some example
  configuration files. The file format is not described in detail here,
  please refer to the individual feature specifications for additions and
  changes to the file format. The actual implementation may differ slightly from
  this specification, but we try to keep it up to date. The loader
  implementation is the reference for the file format, look
  at <code>src/server/loader.y</code>, if you understand lex/yacc code.
</p>
<p>
  All Equalizer units are in meters. This applies currently to the wall
  coordinates and the eye base, as well as the head matrix supplied
  programmatically.
</p>
<p>
  Global values have useful default parameters, which can be overriden with
  environment variables of the same name. For enumeration values,
  e.g. <code>EQ_WINDOW_IATTR_PLANES_COLOR</code>, the corresponding integer
  value has to be used. The global values in the config file override these
  defaults, and are in turn overriden by the corresponding attributes sections
  of the associated entities.
</p>

 <p><pre>
global
{
     EQ_CONNECTION_SATTR_HOSTNAME        string
     EQ_CONNECTION_SATTR_LAUNCH_COMMAND  string
     EQ_CONNECTION_IATTR_TYPE            TCPIP  // others (IB, MYRI, ...) later
     EQ_CONNECTION_IATTR_TCPIP_PORT      unsigned
     EQ_CONNECTION_IATTR_LAUNCH_TIMEOUT  unsigned
     EQ_CONFIG_FATTR_EYE_BASE            float
     EQ_WINDOW_IATTR_HINTS_STEREO        off | on | auto
     EQ_WINDOW_IATTR_HINTS_DOUBLEBUFFER  off | on | auto
     EQ_WINDOW_IATTR_PLANES_COLOR        unsigned
     EQ_WINDOW_IATTR_PLANES_ALPHA        unsigned
     EQ_WINDOW_IATTR_PLANES_DEPTH        unsigned
     EQ_WINDOW_IATTR_PLANES_STENCIL      unsigned
     EQ_WINDOW_IATTR_HINTS_FULLSCREEN    off | on | auto
     EQ_WINDOW_IATTR_HINTS_DECORATION    off | on | auto
}
server
{
    config // 1-n times, currently only the first one is used by the server
    {
        latency int    // # of frames nodes may fall behind application
        attributes
        {
             eye_base float // distance between eyes
        }
        (node|appNode) // 1-n times, a system in the cluster
                       // appNode launches render thread within app process
        {
            connection // 0-n times, possible connections to this node
            {
                type     TCPIP    // other protocols when implemented
                hostname string
                command  string   // launch command for the render client
                timeout  unsigned // timeout in milliseconds for launch
            }
            pipe // 1-n times
            {
                display  unsigned     // X server number or ignored
                screen   unsigned     // graphics adapter number
                viewport [ viewport ] // default: autodetect
                window
                {
                    attributes
                    {
                        hints
                        {
                            stereo         off | on | auto
                            doublebuffer   off | on | auto
                            decoration     off | on | auto
                            fullscreen     off | on | auto
                        }
                        planes
                        {
                            color     unsigned
                            alpha     unsigned
                            depth     unsigned
                            stencil   unsigned
                        }
                    }
                    name     string
                    viewport [ viewport ] // wrt pipe, default full screen
                    channel // 1-n times
                    {
                        name     string
                        viewport [ viewport ] //wrt window, default full window
                    }
                }
            }
        }
        compound // 1-n times
        {
            name     string
            channel  string   // where the compound's tasks are executed
            task     [ CLEAR DRAW READBACK ] // ASSEMBLE CULL later
            buffer   [ COLOR DEPTH ]         // default COLOR
            viewport [ viewport ]            // wrt parent compound, sort-first
            range    [ float float ]         // DB-range for sort-last
            eye      [ CYCLOP LEFT RIGHT ]   // monoscopic or stereo view
            wall                             // frustum description
            {
                bottom_left  [ float float float ]
                bottom_right [ float float float ]
                top_left     [ float float float ]
            }
            
            child-compounds

            swapBarrier  // compounds with the same barriername sync swap
            {
                name string
            }
            outputFrame
            {
                name string
            }
            inputFrame
            {
                name string // corresponding output frame
            }
        }
    }
}
 </pre></p>

#include "footer.shtml"
<!-- $Id:$ -->
